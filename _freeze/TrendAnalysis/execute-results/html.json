{
  "hash": "a7bd53330591850a506fc7ff01abb14f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Trend Analysis\"\nformat: html\n---\n\n\n\n\n\n\n\n\nPurpose: use linear regression and Dynamic Factor Analysis (Zuur *et al.*, Ohlberger et al. *2016*) to characterize long-term trends in YCT population estimates and redd counts. \n\n\n## Mark-Recapture\n\nFormat MR data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopest <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/WyACT/Snake River Assessment/Population data/PopulationEstimates_WGFD_1988-2022_cleaned.csv\") %>%\n  mutate(Nperkm_total = Npermile_total/1.60934) %>% \n  filter(site %in% c(\"Flat_NowlinSleigh\", \"GrosVentre_ParkBoundary-Kelly\", \"Hoback_LowerHoback\", \"Salt_Narrows-Hwy238\", \"Salt_AuburnGrover-Christiansen\", \"Salt_Etna\", \"Snake_Wilson-SouthPark\", \"Snake_Moose-Wilson\", \"Snake_Deadmans-Moose\")) %>%\n  mutate(site = recode(site, \n                       \"Snake_Deadmans-Moose\" = \"Snake River: Deadmans-Moose\", \n                       \"Snake_Moose-Wilson\" = \"Snake River: Moose-Wilson\", \n                       \"Snake_Wilson-SouthPark\" = \"Snake River: Wilson-South Park\", \n                       \"GrosVentre_ParkBoundary-Kelly\" = \"Gros Ventre River\", \n                       \"Flat_NowlinSleigh\" = \"Flat Creek\", \n                       \"Hoback_LowerHoback\" = \"Hoback River (lower)\",  \n                       \"Salt_AuburnGrover-Christiansen\" = \"Salt River: Auburn-Christiansen\", \n                       \"Salt_Narrows-Hwy238\" = \"Salt River: The Narrows\", \n                       \"Salt_Etna\" = \"Salt River: Etna\")) %>%\n  mutate(site = factor(site, levels = c(\"Snake River: Deadmans-Moose\", \"Snake River: Moose-Wilson\", \"Snake River: Wilson-South Park\", \n                                        \"Gros Ventre River\", \"Flat Creek\", \"Hoback River (lower)\",  \n                                        \"Salt River: Auburn-Christiansen\", \"Salt River: The Narrows\", \"Salt River: Etna\")))\n\npopest_mat <- popest %>% select(year, site, Nperkm_total) %>% spread(key = site, value = Nperkm_total)\npopest_mat_formatted <- t(scale(popest_mat[,c(2:10)]))\n```\n:::\n\n\n\n\n\n\n\n### Linear trends\n\nSimple trends using linear regression\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopest %>% \n  group_by(site) %>%\n  mutate(pescaled = scale(Nperkm_total)) %>%\n  ungroup() %>%\n  ggplot(aes(x = year, y = pescaled)) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"blue\", fill = \"blue\", alpha = 0.2) +\n  geom_point() +\n  facet_wrap(~site) +\n  xlab(\"Year\") +\n  ylab(\"YCT per km (standardized)\") +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n```\n\n::: {.cell-output-display}\n![](TrendAnalysis_files/figure-html/unnamed-chunk-3-1.png){width=768}\n:::\n:::\n\n\n\n\n\n\n\n### Dynamic Factor Analysis\n\nUse dynamic factor analysis, DFA, to extract common trends from the population estimate data and estimate the loading of each population onto each  trend (Zuur *et al.* 2003, Ohlberger *et al.* 2016).\n\nFit MARSS models with 1-3 underlying trends and equal variance-covariance structure (these models tended to have the greatest support when compared against other var./cov. structures using AIC). Note that models with 4+ trends fail to converge/throw errors. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncntl.list = list(minit = 200, maxit = 5000, allow.degen = FALSE)\nfit_1 <- MARSS(popest_mat_formatted, model = list(m = 1, R = \"equalvarcov\"), form = \"dfa\", silent = TRUE, control = cntl.list)\nfit_2 <- MARSS(popest_mat_formatted, model = list(m = 2, R = \"equalvarcov\"), form = \"dfa\", silent = TRUE, control = cntl.list)\nfit_3 <- MARSS(popest_mat_formatted, model = list(m = 3, R = \"equalvarcov\"), form = \"dfa\", silent = TRUE, control = cntl.list)\n```\n:::\n\n\n\n\n\n\nFit MARSS models with 1-4 underlying trends and differnt variance/covariance structures, then compare using AICc. Note that using \"unconstrained\" model structure leads to errors. \n\n\n\n\n\n\n\n\n\n\n\n\nUse model selection to determine number of underlying trends: 1-trend model is best.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  model = c(\"1 trend\", \"2 trends\", \"3 trends\"),\n  AICc = round(c(fit_1$AICc, fit_2$AICc, fit_3$AICc), digits = 2)\n) %>% mutate(delta.AICc = round(AICc - min(AICc), digits = 2)) %>% arrange(delta.AICc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 Ã— 3\n  model     AICc delta.AICc\n  <chr>    <dbl>      <dbl>\n1 1 trend   314.        0  \n2 2 trends  331.       16.9\n3 3 trends  350.       36.8\n```\n\n\n:::\n:::\n\n\n\n\n\n\nSet top model\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntopmod <- fit_1\n```\n:::\n\n\n\n\n\n\nView diagnostic plots\n\n\n\n\n\n\n\n\n\n\n\n\nUse varimax rotation to determine trends and loadings\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the inverse of the rotation matrix\nZ.est <- coef(topmod, type = \"matrix\")$Z\nH.inv <- 1\nif (ncol(Z.est) > 1)\nH.inv <- varimax(coef(topmod, type = \"matrix\")$Z)$rotmat\n\n# rotate factor loadings\nZ.rot <- Z.est %*% H.inv\n# rotate trends\ntrends.rot <- solve(H.inv) %*% topmod$states\ntrends.rot.low <- trends.rot - (solve(H.inv) %*% (topmod$states.se*1.95))\ntrends.rot.up <- trends.rot + (solve(H.inv) %*% (topmod$states.se*1.95))\n\n# Add CIs to marssMLE object\ntopmod <- MARSSparamCIs(topmod)\n# Use coef() to get the upper and lower CIs\nZ.low <- coef(topmod, type = \"Z\", what = \"par.lowCI\")\nZ.up <- coef(topmod, type = \"Z\", what = \"par.upCI\")\nZ.rot.up <- Z.up %*% H.inv\nZ.rot.low <- Z.low %*% H.inv\ndf <- data.frame(est = as.vector(Z.rot),\n                 conf.up = as.vector(Z.rot.up),\n                 conf.low = as.vector(Z.rot.low)\n                 )\n```\n:::\n\n\n\n\n\n\nPlot (rotated) common trend and loadings. This figure shows the common trend (left panel) and population-specific trend loadings (right panel; i.e., the extent to which each time series maps onto the common trend). The common trend shows a general pattern of increasing population density, particularly since *ca.* 2006. This increase is largely driven by the Gros Ventre, Salt River Auburn-Christiansen, and Salt River Narrows populations. In contrast, the Snake River Deadmans-Moose population shows the opposite pattern: a long-term decline. All other populations map weakly onto the common trend (i.e., stable trend in population density). \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npops <- rownames(popest_mat_formatted)\npops.short <- c(\"SNK1\", \"SNK2\", \"SNK3\", \"GRVE\", \"FLAT\", \"HOBK\", \"SLT1\", \"SLT2\", \"SLT3\")\n\n# Plot common trends with confidence interval\nptrend1 <- ggplot() + \n  geom_ribbon(data = NULL, aes(x = popest_mat$year, ymin = trends.rot.low[1,], ymax = trends.rot.up[1,]), fill = \"grey\") +\n  geom_hline(yintercept = 0, size = 0.5, linetype = \"dashed\") +\n  geom_line(data = NULL, aes(x = popest_mat$year, y = trends.rot[1,]), size = 1) +\n  xlab(\"Year\") +\n  ylab(\"Common trend\") +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"))\n\n# Plot loadings\npload1 <- ggplot(data=NULL, aes(factor(pops.short, levels = pops.short), Z.rot[,1])) + \n  geom_hline(yintercept = 0, size = 0.5, color = \"grey50\") +\n  geom_hline(yintercept = 0.2, size = 0.5, linetype = \"dashed\", color = \"grey50\") +\n  geom_hline(yintercept = -0.2, size = 0.5, linetype = \"dashed\", color = \"grey50\") +\n  geom_bar(stat = \"identity\", width = 0.2, fill = \"black\") +\n  xlab(\"Population\") +\n  ylab(\"Loading\") +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n# combine plots\nggarrange(ptrend1, pload1, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](TrendAnalysis_files/figure-html/unnamed-chunk-10-1.png){width=768}\n:::\n:::\n\n\n\n\n\n\nPlot population-specific trend estimates. These are basically the loadings multiplied by the common trend and show trend estimates for each population individually.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# run kalman filter\nkf <- MARSSkfss(topmod)\n\n# extract model components\nZ_mat <- coef(topmod, type = \"matrix\")$Z  # Loadings (n_series x n_trends)\nxtT <- kf$xtT                               # States (n_trends x time)\nVtT <- kf$VtT                               # State covariance matrices (n_trends x n_trends x time)\n\n# compute fitted values and standard errors\nn_series <- nrow(Z_mat)\nn_time <- ncol(xtT)\n\nfitted_vals <- Z_mat %*% xtT              # n_series x time\nse_vals <- matrix(NA, n_series, n_time)   # standard errors\n\nfor (t in 1:n_time) {\n  Vt <- VtT[, , t]\n  Var_yt <- Z_mat %*% Vt %*% t(Z_mat)\n  se_vals[, t] <- sqrt(diag(Var_yt))      # std dev for each series at time t\n}\n\n# construct 95% confidence intervals\nupper_band <- fitted_vals + 1.96 * se_vals\nlower_band <- fitted_vals - 1.96 * se_vals\n\n# plot\nas_tibble(t(fitted_vals)) %>% \n  mutate(year = popest_mat$year) %>% \n  gather(key = \"stream\", value = \"fitted\", -year) %>% \n  mutate(stream = factor(stream, levels = pops)) %>%\n  left_join(as_tibble(t(upper_band)) %>% \n              mutate(year = popest_mat$year) %>% \n              gather(key = \"stream\", value = \"fitted_up\", -year) %>% \n              mutate(stream = factor(stream, levels = pops))) %>%\n  left_join(as_tibble(t(lower_band)) %>% \n              mutate(year = popest_mat$year) %>% \n              gather(key = \"stream\", value = \"fitted_low\", -year) %>% \n              mutate(stream = factor(stream, levels = pops))) %>%\n  left_join(as_tibble(t(popest_mat_formatted)) %>% \n              mutate(year = popest_mat$year) %>% \n              gather(key = \"stream\", value = \"observed\", -year) %>% \n              mutate(stream = factor(stream, levels = pops))) %>%\n  ggplot() +\n  geom_ribbon(aes(x = year, ymin = fitted_low, ymax = fitted_up), fill = \"blue\", alpha = 0.2) +\n  geom_point(aes(x = year, y = observed)) +\n  geom_line(aes(x = year, y = fitted), color = \"blue\", size = 1) +\n  facet_wrap(~stream) +\n  xlab(\"Year\") +\n  ylab(\"Redds per km (standardized)\") +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n```\n\n::: {.cell-output-display}\n![](TrendAnalysis_files/figure-html/unnamed-chunk-11-1.png){width=768}\n:::\n:::\n\n\n\n\n\n\n\n## Redd Counts\n\nFormat redd count data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# spring creek redd counts\nreddcts <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/WyACT/Snake River Assessment/Population data/ReddCounts_WGFD_1971-2021_cleaned.csv\") %>%\n  filter(stream != \"Cody\") %>%\n  mutate(stream = recode(stream, \"3 Channel\" = \"Three Channel\", \"Snake River Side Channel\" = \"SR Side Channel\")) %>%\n  mutate(stream = factor(stream, levels = c(\"Cowboy Cabin\", \"Upper Bar BC\", \"SR Side Channel\", \"Blacktail\",\n                                            \"Three Channel\", \"Price\", \"Lower Bar BC\", \"Little Bar BC\", \"Fish\", \n                                            \"Flat\", \"Nowlin\", \"Spring\", \"Blue Crane\", \"Dave\", \"Laker\", \"Christiansen\")))\n\nreddcts_mat <- reddcts %>% select(year, stream, reddsperkm) %>% spread(key = stream, value = reddsperkm)\nreddcts_mat_formatted <- t(scale(reddcts_mat[,c(2:17)]))\n```\n:::\n\n\n\n\n\n\n### Linear trends\n\nSimple trends using linear regression\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreddcts %>% \n  group_by(stream) %>%\n  mutate(reddsscaled = scale(reddsperkm)) %>%\n  ungroup() %>%\n  ggplot(aes(x = year, y = reddsscaled)) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"blue\", fill = \"blue\", alpha = 0.2) +\n  geom_point() +\n  facet_wrap(~stream) +\n  xlab(\"Year\") +\n  ylab(\"Redds per km (standardized)\") +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n```\n\n::: {.cell-output-display}\n![](TrendAnalysis_files/figure-html/unnamed-chunk-13-1.png){width=768}\n:::\n:::\n\n\n\n\n\n\n\n### Dynamic Factor Analysis\n\nUse dynamic factor analysis, DFA, to extract common trends from the redd count data and estimate the loading of each population onto each  trend (Zuur *et al.* 2003, Ohlberger *et al.* 2016).\n\nFit MARSS models with 1-4 underlying trends and equal variance-covariance structure (these models tended to have the greatest support when compared against other var./cov. structures using AIC).\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncntl.list = list(minit = 200, maxit = 5000, allow.degen = FALSE)\nfit_1 <- MARSS(reddcts_mat_formatted, model = list(m = 1, R = \"equalvarcov\"), form = \"dfa\", silent = TRUE, control = cntl.list)\nfit_2 <- MARSS(reddcts_mat_formatted, model = list(m = 2, R = \"equalvarcov\"), form = \"dfa\", silent = TRUE, control = cntl.list)\nfit_3 <- MARSS(reddcts_mat_formatted, model = list(m = 3, R = \"equalvarcov\"), form = \"dfa\", silent = TRUE, control = cntl.list)\nfit_4 <- MARSS(reddcts_mat_formatted, model = list(m = 4, R = \"equalvarcov\"), form = \"dfa\", silent = TRUE, control = cntl.list)\n```\n:::\n\n\n\n\n\n\nFit MARSS models with 1-4 underlying trends and differnt variance/covariance structures, then compare using AICc. Note that using and \"unconstrained\" model structure leads to errors. \n\n\n\n\n\n\n\n\n\n\n\n\nUse model selection to determine number of underlying trends: 1-trend model is best, but only slightly better than the 2 trend model.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  model = c(\"1 trend\", \"2 trends\", \"3 trends\", \"4 trends\"),\n  AICc = round(c(fit_1$AICc, fit_2$AICc, fit_3$AICc, fit_4$AICc), digits = 2)\n) %>% mutate(delta.AICc = round(AICc - min(AICc), digits = 2)) %>% arrange(delta.AICc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã— 3\n  model     AICc delta.AICc\n  <chr>    <dbl>      <dbl>\n1 1 trend  1145.       0   \n2 2 trends 1146.       1.63\n3 3 trends 1162.      17.0 \n4 4 trends 1188.      43.3 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nSet top model\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntopmod <- fit_1\n```\n:::\n\n\n\n\n\n\nView diagnostic plots\n\n\n\n\n\n\n\n\n\n\n\n\nUse varimax rotation to determine trends and loadings\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the inverse of the rotation matrix\nZ.est <- coef(topmod, type = \"matrix\")$Z\nH.inv <- 1\nif (ncol(Z.est) > 1)\nH.inv <- varimax(coef(topmod, type = \"matrix\")$Z)$rotmat\n\n# rotate factor loadings\nZ.rot <- Z.est %*% H.inv\n# rotate trends\ntrends.rot <- solve(H.inv) %*% topmod$states\ntrends.rot.low <- trends.rot - (solve(H.inv) %*% (topmod$states.se*1.95))\ntrends.rot.up <- trends.rot + (solve(H.inv) %*% (topmod$states.se*1.95))\n\n# Add CIs to marssMLE object\ntopmod <- MARSSparamCIs(topmod)\n# Use coef() to get the upper and lower CIs\nZ.low <- coef(topmod, type = \"Z\", what = \"par.lowCI\")\nZ.up <- coef(topmod, type = \"Z\", what = \"par.upCI\")\nZ.rot.up <- Z.up %*% H.inv\nZ.rot.low <- Z.low %*% H.inv\ndf <- data.frame(est = as.vector(Z.rot),\n                 conf.up = as.vector(Z.rot.up),\n                 conf.low = as.vector(Z.rot.low)\n                 )\n```\n:::\n\n\n\n\n\n\nPlot (rotated) common trend and loadings. The common trend indicates a period of relative stability (pre-1993) followed a period of increasing redd densities in spring-fed spawning tributaries (1993-2022). This post-1993 period of population increases is interrupted by a short period (*ca.* 5 years) of decline in the early 2000s. Most populations load positively onto the common trend, but particularly Cowboy Cabin Spring, Upper Bar BC Spring, Price Spring, Flat Creek, Nowlin Creek, and Christiansen Spring. Spring Creek shows the opposite trend, indicating a decline in redd densities since the 1990s (although note that data for this population is only available from 1993 to 2007). Redd densities in all other populations are generally stable over the period of record. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npops <- rownames(reddcts_mat_formatted)\npops.short <- c(\"COCA\", \"UBBC\", \"SRSC\", \"BLKT\", \"THCH\", \"PRCE\", \"LOBC\", \"LIBC\", \"FISH\", \"FLAT\", \"NOWL\", \"SPRG\", \"BLCR\", \"DAVE\", \"LAKR\", \"CHRS\")\n\n# Plot common trends with confidence interval\nptrend1 <- ggplot() + \n  geom_ribbon(data = NULL, aes(x = reddcts_mat$year, ymin = trends.rot.low[1,], ymax = trends.rot.up[1,]), fill = \"grey\") +\n  geom_hline(yintercept = 0, size = 0.5, linetype = \"dashed\") +\n  geom_line(data = NULL, aes(x = reddcts_mat$year, y = trends.rot[1,]), size = 1) +\n  xlab(\"Year\") +\n  ylab(\"Common trend\") +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"))\n# ptrend2 <- ggplot() + \n#   geom_ribbon(data = NULL, aes(x = reddcts_mat$year, ymin = trends.rot.low[2,], ymax = trends.rot.up[2,]), fill = \"grey\") +\n#   geom_hline(yintercept = 0, size = 0.5, linetype = \"dashed\") +\n#   geom_line(data = NULL, aes(x = reddcts_mat$year, y = trends.rot[2,]), size = 1) +\n#   xlab(\"Year\") +\n#   ylab(\"Common trend 2\") +\n#   theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\")) + ylim(-6,9)\n\n# Plot loadings\npload1 <- ggplot(data=NULL, aes(factor(pops.short, levels = pops.short), Z.rot[,1])) + \n  geom_hline(yintercept = 0, size = 0.5, color = \"grey50\") +\n  geom_hline(yintercept = 0.2, size = 0.5, linetype = \"dashed\", color = \"grey50\") +\n  geom_hline(yintercept = -0.2, size = 0.5, linetype = \"dashed\", color = \"grey50\") +\n  geom_bar(stat = \"identity\", width = 0.2, fill = \"black\") +\n  xlab(\"Population\") +\n  ylab(\"Loading\") +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n# pload2 <- ggplot(data=NULL, aes(factor(pops.short, levels = pops.short), Z.rot[,2])) + \n#   geom_hline(yintercept = 0, size = 0.5, color = \"grey50\") +\n#   geom_hline(yintercept = 0.2, size = 0.5, linetype = \"dashed\", color = \"grey50\") +\n#   geom_hline(yintercept = -0.2, size = 0.5, linetype = \"dashed\", color = \"grey50\") +\n#   geom_bar(stat = \"identity\", width = 0.2, fill = \"black\") +\n#   xlab(\"Population\") +\n#   ylab(\"Loading\") +\n#   theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + ylim(-0.3,0.4)\n\n# combine plots\nggarrange(ptrend1, pload1, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](TrendAnalysis_files/figure-html/unnamed-chunk-20-1.png){width=768}\n:::\n:::\n\n\n\n\n\n\nPlot population-specific trend estimates\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# run kalman filter\nkf <- MARSSkfss(topmod)\n\n# extract model components\nZ_mat <- coef(topmod, type = \"matrix\")$Z  # Loadings (n_series x n_trends)\nxtT <- kf$xtT                               # States (n_trends x time)\nVtT <- kf$VtT                               # State covariance matrices (n_trends x n_trends x time)\n\n# compute fitted values and standard errors\nn_series <- nrow(Z_mat)\nn_time <- ncol(xtT)\n\nfitted_vals <- Z_mat %*% xtT              # n_series x time\nse_vals <- matrix(NA, n_series, n_time)   # standard errors\n\nfor (t in 1:n_time) {\n  Vt <- VtT[, , t]\n  Var_yt <- Z_mat %*% Vt %*% t(Z_mat)\n  se_vals[, t] <- sqrt(diag(Var_yt))      # std dev for each series at time t\n}\n\n# construct 95% confidence intervals\nupper_band <- fitted_vals + 1.96 * se_vals\nlower_band <- fitted_vals - 1.96 * se_vals\n\n# plot\nas_tibble(t(fitted_vals)) %>% \n  mutate(year = reddcts_mat$year) %>% \n  gather(key = \"stream\", value = \"fitted\", -year) %>% \n  mutate(stream = factor(stream, levels = pops)) %>%\n  left_join(as_tibble(t(upper_band)) %>% \n              mutate(year = reddcts_mat$year) %>% \n              gather(key = \"stream\", value = \"fitted_up\", -year) %>% \n              mutate(stream = factor(stream, levels = pops))) %>%\n  left_join(as_tibble(t(lower_band)) %>% \n              mutate(year = reddcts_mat$year) %>% \n              gather(key = \"stream\", value = \"fitted_low\", -year) %>% \n              mutate(stream = factor(stream, levels = pops))) %>%\n  left_join(as_tibble(t(reddcts_mat_formatted)) %>% \n              mutate(year = reddcts_mat$year) %>% \n              gather(key = \"stream\", value = \"observed\", -year) %>% \n              mutate(stream = factor(stream, levels = pops))) %>%\n  ggplot() +\n  geom_ribbon(aes(x = year, ymin = fitted_low, ymax = fitted_up), fill = \"blue\", alpha = 0.2) +\n  geom_point(aes(x = year, y = observed)) +\n  geom_line(aes(x = year, y = fitted), color = \"blue\", size = 1) +\n  facet_wrap(~stream) +\n  xlab(\"Year\") +\n  ylab(\"Redds per km (standardized)\") +\n  theme_bw() + theme(panel.grid = element_blank(), axis.text = element_text(color = \"black\"), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n```\n\n::: {.cell-output-display}\n![](TrendAnalysis_files/figure-html/unnamed-chunk-21-1.png){width=768}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}